import re

# 1. Получите текст из файла.
f = open('text.txt', 'r')
fd = f.read()
#print(fd)
# #
#2. Разбейте полученные текст на предложения.
print(re.findall("([1-9)a-zA-Zа-яА-Я ,/]+)[!?\.][\s]", fd))

# 3. Найдите слова, состоящие из 4 букв и более. Выведите на экран 10 самых часто используемых слов.
print(re.findall("[ ]([а-я]{4})[ ]", fd))
#
# 4. Отберите все ссылки.
# Примечание: Для поиска воспользуйтесь методом compile, в который вы вставите свой шаблон для поиска ссылок в тексте.
patern = re.compile("\s([a-z./]+)|\s(\d[a-z./]+)")
print(patern.findall(fd))
## print(re.findall("(\w+[\.]\w+|\w+[/]\w+)", fd))
#
# 5. Ссылки на страницы какого домена встречаются чаще всего?
# Напоминаем, что доменное имя — часть ссылки до первого символа «слеш». Например в ссылке вида travel.mail.ru/travel?id=5 доменным именем является travel.mail.ru.
# Подсчет частоты сделайте по аналогии с заданием 3, но верните только одну самую частую ссылку.
patern = re.compile("\s([a-z.]+)")
matches = patern.findall(fd)
for match in matches:
    print(match + ": " +str(len(re.findall(match,fd))))

#6. Замените все ссылки на текст «Ссылка отобразится после регистрации».

patern = re.compile("\s([a-z./]+)")
matches = patern.findall(fd)
for match in matches:
    fd = re.sub(match, "Ссылка отобразится после регистрации", fd)
print(fd)

